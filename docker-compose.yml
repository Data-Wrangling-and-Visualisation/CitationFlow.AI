version: '3.8'

services:
  backend:
    build:
      context: ./back
    container_name: backend
    ports:
      - "8000:8000"
    restart: always
    environment:
      - PORT=8000
    networks:
      - app-network
    depends_on:
      - db

  frontend:
    build:
      context: ./front
    container_name: frontend
    ports:
      - "8080:80"
    restart: always
    environment:
      - PORT=3000
    networks:
      - app-network
    depends_on:
      - backend

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  db-populator:
    build:
      context: ./db
    container_name: db-populator
    depends_on:
      - db
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
